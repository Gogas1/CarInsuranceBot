// <auto-generated />
using System;
using CarInsuranceBot.WebApi.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarInsuranceBot.WebApi.Migrations
{
    [DbContext(typeof(CarInsuranceDbContext))]
    [Migration("20250610191652_FlowModelUpdate")]
    partial class FlowModelUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarInsuranceBot.Core.Models.MyUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserState")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarInsuranceBot.Core.Models.UserInputState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserInputStates");
                });

            modelBuilder.Entity("CarInsuranceBot.Core.Models.UserInputState", b =>
                {
                    b.HasOne("CarInsuranceBot.Core.Models.MyUser", "User")
                        .WithOne("InputState")
                        .HasForeignKey("CarInsuranceBot.Core.Models.UserInputState", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CarInsuranceBot.Core.Models.StateFlows.CreateInsuranceFlow", "CreateInsuranceFlow", b1 =>
                        {
                            b1.Property<Guid>("UserInputStateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DriverLicenseCacheKey")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("IdCacheKey")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserInputStateId");

                            b1.ToTable("UserInputStates");

                            b1.WithOwner()
                                .HasForeignKey("UserInputStateId");
                        });

                    b.Navigation("CreateInsuranceFlow")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarInsuranceBot.Core.Models.MyUser", b =>
                {
                    b.Navigation("InputState")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
